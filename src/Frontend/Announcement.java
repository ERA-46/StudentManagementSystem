/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;
import DatabaseLayer.DBConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import Models.SendAnnouncement;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;
import java.util.ArrayList;
import java.util.Arrays;
import static javax.swing.UIManager.get;
import java.util.Properties; //for mail
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author sange
 */
public class Announcement extends javax.swing.JInternalFrame {
    
    SendAnnouncement ann;
    String arr[];
    
    
    /**
     * Creates new form Announcement
     * 
     */
    public Announcement() {
        initComponents();
        ann = new SendAnnouncement();

    }
    
    public String[] ListEmail(){
        int a = tblEmail.getRowCount();
        arr = new String[a];
        int col = tblEmail.getColumnCount();
        
        for(int i=0 ; i < a ; i++){
            
           for(int j=0 ; j < col ; j++){
                
                arr[i] = (String)tblEmail.getValueAt(i,1);
            }
        }
        return arr;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chkStudent = new javax.swing.JCheckBox();
        chkStaff = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        chkGeography = new javax.swing.JCheckBox();
        chkCMaths = new javax.swing.JCheckBox();
        chkBio = new javax.swing.JCheckBox();
        chkChem = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        chkIELTS = new javax.swing.JCheckBox();
        chkFCE = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        chkKET = new javax.swing.JCheckBox();
        chkScience = new javax.swing.JCheckBox();
        chkPET = new javax.swing.JCheckBox();
        chkMaths = new javax.swing.JCheckBox();
        chkEnglish = new javax.swing.JCheckBox();
        btnselect = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        chkNonAcademic = new javax.swing.JCheckBox();
        chkAcademic = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        txtReceivers = new javax.swing.JTextField();
        txtSubject = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmail = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Send to");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        chkStudent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkStudent.setText("All Students");
        chkStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkStudentMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chkStudentMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chkStudentMouseReleased(evt);
            }
        });
        chkStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkStudentActionPerformed(evt);
            }
        });
        getContentPane().add(chkStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        chkStaff.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkStaff.setText("All Staff Members");
        chkStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkStaffMouseClicked(evt);
            }
        });
        chkStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkStaffActionPerformed(evt);
            }
        });
        getContentPane().add(chkStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Message");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, -1, 32));

        txtMessage.setColumns(20);
        txtMessage.setRows(5);
        jScrollPane1.setViewportView(txtMessage);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 680, 300));

        btnSend.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSend.setText("SEND");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 820, 380, 60));

        chkGeography.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkGeography.setText("Geography");
        chkGeography.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkGeographyMouseClicked(evt);
            }
        });
        getContentPane().add(chkGeography, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 100, -1, -1));

        chkCMaths.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkCMaths.setText("C.Maths");
        chkCMaths.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCMathsMouseClicked(evt);
            }
        });
        getContentPane().add(chkCMaths, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 160, -1, -1));

        chkBio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkBio.setText("Biology");
        chkBio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkBioMouseClicked(evt);
            }
        });
        getContentPane().add(chkBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 160, -1, -1));

        chkChem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkChem.setText("Chemistry");
        chkChem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkChemMouseClicked(evt);
            }
        });
        getContentPane().add(chkChem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 160, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Courses");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 30, -1, -1));

        chkIELTS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkIELTS.setText("IELTS");
        chkIELTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkIELTSMouseClicked(evt);
            }
        });
        chkIELTS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIELTSActionPerformed(evt);
            }
        });
        getContentPane().add(chkIELTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 30, -1, -1));

        chkFCE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkFCE.setText("FCE");
        chkFCE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkFCEMouseClicked(evt);
            }
        });
        chkFCE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chkFCEKeyPressed(evt);
            }
        });
        getContentPane().add(chkFCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 30, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Classes");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, -1, -1));

        chkKET.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkKET.setText("KET");
        chkKET.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkKETMouseClicked(evt);
            }
        });
        getContentPane().add(chkKET, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 30, -1, -1));

        chkScience.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkScience.setText("Science");
        chkScience.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkScienceMouseClicked(evt);
            }
        });
        getContentPane().add(chkScience, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 100, -1, -1));

        chkPET.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkPET.setText("PET");
        chkPET.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkPETMouseClicked(evt);
            }
        });
        getContentPane().add(chkPET, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 30, -1, -1));

        chkMaths.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkMaths.setText("Maths");
        chkMaths.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkMathsMouseClicked(evt);
            }
        });
        getContentPane().add(chkMaths, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 100, -1, -1));

        chkEnglish.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkEnglish.setText("English");
        chkEnglish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkEnglishMouseClicked(evt);
            }
        });
        getContentPane().add(chkEnglish, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 100, -1, -1));

        btnselect.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnselect.setText("Select Receivers");
        btnselect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectActionPerformed(evt);
            }
        });
        getContentPane().add(btnselect, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 560, 50));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Staff");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        chkNonAcademic.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkNonAcademic.setText("Non-academic");
        chkNonAcademic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkNonAcademicMouseClicked(evt);
            }
        });
        getContentPane().add(chkNonAcademic, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, -1, -1));

        chkAcademic.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkAcademic.setText("Academic");
        chkAcademic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkAcademicMouseClicked(evt);
            }
        });
        getContentPane().add(chkAcademic, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Subject");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        txtReceivers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReceiversActionPerformed(evt);
            }
        });
        getContentPane().add(txtReceivers, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 680, 42));

        txtSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectActionPerformed(evt);
            }
        });
        getContentPane().add(txtSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 680, 41));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Receivers");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 250, -1, -1));

        tblEmail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblEmail);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(812, 232, 590, 610));

        jButton1.setText("CLEAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 110, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnselectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectActionPerformed
        // TODO add your handling code here:
        DBConnection con = new DBConnection();
        
        try{
            //for all students and staff members
            if(chkStudent.isSelected()){
                String sql = "select Name, Email from Student ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery(); 
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkStaff.isSelected()){
                String sql = "select Name, Email from Staff ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkStudent.isSelected() && chkStaff.isSelected()){
                String sql = "select Name, Email from Staff "
                        + "UNION select Name, Email from Student ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            //for academic and non academic
            if(chkAcademic.isSelected()){
                String sql = "select Name, Email from Staff where Type = 'Academic' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery(); 
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkNonAcademic.isSelected()){
                String sql = "select Name, Email from Staff where Type = 'Non-Academic' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery(); 
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkNonAcademic.isSelected() && chkAcademic.isSelected()){
                String sql = "select Name, Email from Staff ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery(); 
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            //for OL classes
            if(chkEnglish.isSelected()){
                String sql = "select Name, Email from Student where Class like '%english%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkScience.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Science%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Maths%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Geography%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkScience.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Science%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%'"
                        + " UNION select Name, Email from Student where Class like '%Maths%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkScience.isSelected() && chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Maths%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkScience.isSelected() && chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkMaths.isSelected() && chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Maths%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkScience.isSelected() && chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Maths%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkGeography.isSelected() && chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' "
                        + "UNION select Name, Email from Student where Class like '%Maths%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkScience.isSelected() && chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkGeography.isSelected() && chkScience.isSelected() && chkMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Geography%' "
                        + "UNION select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Maths%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkEnglish.isSelected() && chkScience.isSelected() && chkMaths.isSelected() && chkGeography.isSelected()){
                String sql = "select Name, Email from Student where Class like '%English%' "
                        + "UNION select Name, Email from Student where Class like '%Science%' "
                        + "UNION select Name, Email from Student where Class like '%Maths%' "
                        + "UNION select Name, Email from Student where Class like '%Geography%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            //for Courses
            if(chkIELTS.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkFCE.isSelected()){
                String sql = "select Name, Email from Student where Course like '%FCE%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkKET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%KET%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%PET%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkFCE.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Class like '%FCE%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkKET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%'"
                        + " UNION select Name, Email from Student where Course like '%KET%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkFCE.isSelected() && chkKET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%FCE%' "
                        + "UNION select Name, Email from Student where Course like '%KET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkPET.isSelected() && chkFCE.isSelected()){
                String sql = "select Name, Email from Student where Course like '%PET%' "
                        + "UNION select Name, Email from Student where Course like '%FCE%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkKET.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%KET%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkFCE.isSelected() && chkKET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Course like '%FCE%' "
                        + "UNION select Name, Email from Student where Course like '%KET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkKET.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Course like '%KET%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkFCE.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Course like '%FCE%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkFCE.isSelected() && chkKET.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%FCE%' "
                        + "UNION select Name, Email from Student where Course like '%KET%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkIELTS.isSelected() && chkFCE.isSelected() && chkKET.isSelected() && chkPET.isSelected()){
                String sql = "select Name, Email from Student where Course like '%IELTS%' "
                        + "UNION select Name, Email from Student where Course like '%FCE%' "
                        + "UNION select Name, Email from Student where Course like '%KET%' "
                        + "UNION select Name, Email from Student where Course like '%PET%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            //for AL classes
            if(chkCMaths.isSelected()){
                String sql = "select Name, Email from Student where Class like '%CMaths%' "; //Al class eka balanna
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkBio.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Bio%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkChem.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Chemistry%' "; 
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkCMaths.isSelected() && chkBio.isSelected()){
                String sql = "select Name, Email from Student where Class like '%CMaths%' " //class eka balanna one
                        + "UNION select Name, Email from Student where Class like '%Bio%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkCMaths.isSelected() && chkChem.isSelected()){
                String sql = "select Name, Email from Student where Class like '%CMaths%'" //class
                        + " UNION select Name, Email from Student where Class like '%Chemistry%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkBio.isSelected() && chkChem.isSelected()){
                String sql = "select Name, Email from Student where Class like '%Bio%' "
                        + "UNION select Name, Email from Student where Class like '%Chemistry%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            if(chkCMaths.isSelected() && chkBio.isSelected() && chkChem.isSelected()){
                String sql = "select Name, Email from Student where Class like '%CMaths%' " //class
                        + "UNION select Name, Email from Student where Class like '%Bio%' "
                        + "UNION select Name, Email from Student where Class like '%Chemistry%' ";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblEmail.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            ListEmail();
            
            txtReceivers.setText(Arrays.toString(arr).replaceAll("[\\p{Ps}\\p{Pe}]", ""));
            
        } catch(SQLException ex){
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    
    }//GEN-LAST:event_btnselectActionPerformed

    private void chkStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkStudentActionPerformed

    private void chkStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkStudentMouseClicked
        // TODO add your handling code here:
        if(chkStudent.isSelected()){
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
            chkGeography.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        }
        else{
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
            chkGeography.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
        
    }//GEN-LAST:event_chkStudentMouseClicked

    private void chkStudentMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkStudentMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_chkStudentMouseExited

    private void chkStudentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkStudentMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_chkStudentMouseReleased

    private void chkStaffMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkStaffMouseClicked
        // TODO add your handling code here:
        if (chkStaff.isSelected()) {
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
            chkGeography.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        }
        else{
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
            chkGeography.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkStaffMouseClicked

    private void txtSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubjectActionPerformed

    private void chkEnglishMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkEnglishMouseClicked
        // TODO add your handling code here:
        if(chkEnglish.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
        }
    }//GEN-LAST:event_chkEnglishMouseClicked

    private void chkScienceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkScienceMouseClicked
        // TODO add your handling code here:
        if(chkScience.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
        }
    }//GEN-LAST:event_chkScienceMouseClicked

    private void chkMathsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkMathsMouseClicked
        // TODO add your handling code here:
        if(chkMaths.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
        }
    }//GEN-LAST:event_chkMathsMouseClicked

    private void chkGeographyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkGeographyMouseClicked
        // TODO add your handling code here:
        if(chkGeography.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
        }
    }//GEN-LAST:event_chkGeographyMouseClicked

    private void chkCMathsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCMathsMouseClicked
        // TODO add your handling code here:
        if(chkCMaths.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkCMathsMouseClicked

    private void chkBioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBioMouseClicked
        // TODO add your handling code here:
        if(chkBio.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkBioMouseClicked

    private void chkChemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkChemMouseClicked
        // TODO add your handling code here:
        if(chkChem.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkChemMouseClicked

    private void chkAcademicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkAcademicMouseClicked
        // TODO add your handling code here:
        if(chkAcademic.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
            chkGeography.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
            chkGeography.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkAcademicMouseClicked

    private void chkNonAcademicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkNonAcademicMouseClicked
        // TODO add your handling code here:
        if(chkNonAcademic.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
            chkGeography.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
            chkGeography.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkNonAcademicMouseClicked

    private void chkIELTSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkIELTSMouseClicked
        // TODO add your handling code here:
        if(chkIELTS.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkIELTSMouseClicked

    private void chkFCEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chkFCEKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkFCEKeyPressed

    private void chkKETMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkKETMouseClicked
        // TODO add your handling code here:
        if(chkKET.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkKETMouseClicked

    private void chkPETMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkPETMouseClicked
        // TODO add your handling code here:
        if(chkPET.isSelected()){
            chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkPETMouseClicked

    private void chkFCEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkFCEMouseClicked
        // TODO add your handling code here:
        if(chkFCE.isSelected()){
           chkStudent.setEnabled(false);
            chkStaff.setEnabled(false);
            chkAcademic.setEnabled(false);
            chkNonAcademic.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);
            chkGeography.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
        }
        else{
            chkStudent.setEnabled(true);
            chkStaff.setEnabled(true);
            chkAcademic.setEnabled(true);
            chkNonAcademic.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);
            chkGeography.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
        }
    }//GEN-LAST:event_chkFCEMouseClicked

    private void txtReceiversActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReceiversActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtReceiversActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if(txtReceivers.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please select Receivers");
        }
        if(txtSubject.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the Subject");
        }
        if(txtMessage.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Mail body is EMpty!");
        }
        else
            
        SendEmail();
    }//GEN-LAST:event_btnSendActionPerformed

    private void chkStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkStaffActionPerformed

    private void chkIELTSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIELTSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkIELTSActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtReceivers.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    public void SendEmail(){
        try {
            String Rcv = txtReceivers.getText();
            String Subject = txtSubject.getText();
            String Body = txtMessage.getText();
            String SenderMail = "demoemail905@gmail.com";
            String Password = "test@123TEST";
            
            Properties pr = new Properties();
            
            pr.put("mail.smtp.auth", "true");
            pr.put("mail.smtp.starttls.enable", "true");
            pr.put("mail.smtp.host", "smtp.gmail.com");
            pr.put("mail.smtp.port", "587");
            
            Session session = Session.getInstance(pr, new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(SenderMail, Password);   
                }
            });
            
            Message message = SendMessage(session, SenderMail, Rcv, Subject, Body);
            
            Transport.send(message);
            JOptionPane.showMessageDialog(null, "Email has sent successfully!");
            
            txtReceivers.setText("");
            txtSubject.setText("");
            txtMessage.setText("");
            
        } catch (MessagingException ex) {
            Logger.getLogger(Announcement.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public static Message SendMessage(Session session, String SenderMail, String Rcv, String Subject, String Body){
        
        try{
            MimeMessage message = new MimeMessage(session);
            message.setFrom(new InternetAddress(SenderMail));
            message.addRecipients(Message.RecipientType.TO, InternetAddress.parse(Rcv));
            message.setSubject(Subject);
            message.setText(Body);

            return message;
            
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        return null;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnselect;
    private javax.swing.JCheckBox chkAcademic;
    private javax.swing.JCheckBox chkBio;
    private javax.swing.JCheckBox chkCMaths;
    private javax.swing.JCheckBox chkChem;
    private javax.swing.JCheckBox chkEnglish;
    private javax.swing.JCheckBox chkFCE;
    private javax.swing.JCheckBox chkGeography;
    private javax.swing.JCheckBox chkIELTS;
    private javax.swing.JCheckBox chkKET;
    private javax.swing.JCheckBox chkMaths;
    private javax.swing.JCheckBox chkNonAcademic;
    private javax.swing.JCheckBox chkPET;
    private javax.swing.JCheckBox chkScience;
    private javax.swing.JCheckBox chkStaff;
    private javax.swing.JCheckBox chkStudent;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblEmail;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextField txtReceivers;
    private javax.swing.JTextField txtSubject;
    // End of variables declaration//GEN-END:variables

}
