/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;

import DatabaseLayer.DBConnection;
import DatabaseLayer.DBUserConnection;
import Models.AddStudent;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;
import java.awt.EventQueue;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.FileSystems;
import javafx.scene.control.RadioButton;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import javax.swing.table.TableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.regex.*;

/**
 *
 * @author sange
 */
public class Student extends javax.swing.JInternalFrame {

    Models.AddStudent Stud;
    String Gender;
    String Occupation;
    String Class = "";
    String Course = "";

    /**
     * Creates new form Student
     */
    public Student() {
        initComponents();

        Stud = new AddStudent();

        showTableData();
    }

    public void showTableData() {
        DBConnection con = new DBConnection();
        try {
            String sql = "select * from Student";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();
            tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        grpOccupation = new javax.swing.ButtonGroup();
        grpGender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        txtGuardian = new javax.swing.JTextField();
        txtBirthday = new javax.swing.JTextField();
        cmbGrade = new javax.swing.JComboBox<>();
        chkScience = new javax.swing.JCheckBox();
        chkMaths = new javax.swing.JCheckBox();
        chkEnglish = new javax.swing.JCheckBox();
        chkGeography = new javax.swing.JCheckBox();
        chkCMaths = new javax.swing.JCheckBox();
        chkBio = new javax.swing.JCheckBox();
        chkChem = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        chkIELTS = new javax.swing.JCheckBox();
        chkFCE = new javax.swing.JCheckBox();
        chkKET = new javax.swing.JCheckBox();
        chkPET = new javax.swing.JCheckBox();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtSearchStud = new javax.swing.JTextField();
        btnSearchStud = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbSrchBy = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        btnLoad = new javax.swing.JButton();
        txtStudID = new javax.swing.JTextField();
        btnExcel = new javax.swing.JButton();
        lblNameAlert = new javax.swing.JLabel();
        rdbStudent = new javax.swing.JRadioButton();
        rdbEmployee = new javax.swing.JRadioButton();
        rdbMale = new javax.swing.JRadioButton();
        rdbFemale = new javax.swing.JRadioButton();
        lblContactAlert = new javax.swing.JLabel();
        lblBdayAlert = new javax.swing.JLabel();
        lblGuardianAlert = new javax.swing.JLabel();
        lblEmailAlert = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel2.setText("Address");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 190, -1));

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddressKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtAddress);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 191, 90));

        jLabel3.setText("Contact");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        jLabel4.setText("Birthday");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        jLabel5.setText("Guardian");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, -1, -1));

        jLabel6.setText("Occupation");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, -1));

        jLabel7.setText("Gender");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, 20));

        jLabel8.setText("Grade");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, -1, -1));

        jLabel9.setText("Classes");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, -1, -1));

        txtContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContactActionPerformed(evt);
            }
        });
        txtContact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtContactKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContactKeyReleased(evt);
            }
        });
        getContentPane().add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 191, -1));

        txtGuardian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGuardianActionPerformed(evt);
            }
        });
        txtGuardian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGuardianKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGuardianKeyReleased(evt);
            }
        });
        getContentPane().add(txtGuardian, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 191, -1));

        txtBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBirthdayActionPerformed(evt);
            }
        });
        txtBirthday.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBirthdayKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBirthdayKeyReleased(evt);
            }
        });
        getContentPane().add(txtBirthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 191, -1));

        cmbGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "A/L" }));
        cmbGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGradeActionPerformed(evt);
            }
        });
        cmbGrade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbGradeKeyPressed(evt);
            }
        });
        getContentPane().add(cmbGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 510, 127, -1));

        chkScience.setText("Science");
        chkScience.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkScienceActionPerformed(evt);
            }
        });
        getContentPane().add(chkScience, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        chkMaths.setText("Maths");
        chkMaths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMathsActionPerformed(evt);
            }
        });
        getContentPane().add(chkMaths, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, -1, -1));

        chkEnglish.setText("English");
        chkEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEnglishActionPerformed(evt);
            }
        });
        getContentPane().add(chkEnglish, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        chkGeography.setText("Geography");
        chkGeography.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGeographyActionPerformed(evt);
            }
        });
        getContentPane().add(chkGeography, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, -1, -1));

        chkCMaths.setText("C.Maths");
        chkCMaths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCMathsActionPerformed(evt);
            }
        });
        getContentPane().add(chkCMaths, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 70, -1, -1));

        chkBio.setText("Biology");
        chkBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBioActionPerformed(evt);
            }
        });
        getContentPane().add(chkBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, -1, -1));

        chkChem.setText("Chemistry");
        chkChem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkChemActionPerformed(evt);
            }
        });
        getContentPane().add(chkChem, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, -1, -1));

        jLabel10.setText("Courses");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, -1, -1));

        chkIELTS.setText("IELTS");
        chkIELTS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIELTSActionPerformed(evt);
            }
        });
        getContentPane().add(chkIELTS, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, -1, -1));

        chkFCE.setText("FCE");
        chkFCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFCEActionPerformed(evt);
            }
        });
        getContentPane().add(chkFCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, -1, -1));

        chkKET.setText("KET");
        chkKET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkKETActionPerformed(evt);
            }
        });
        getContentPane().add(chkKET, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, -1, -1));

        chkPET.setText("PET");
        chkPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPETActionPerformed(evt);
            }
        });
        getContentPane().add(chkPET, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, -1, -1));

        btnAdd.setText("ADD");
        btnAdd.setPreferredSize(new java.awt.Dimension(71, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        btnAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnAddKeyReleased(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 90, -1));

        btnClear.setText("CLEAR");
        btnClear.setPreferredSize(new java.awt.Dimension(71, 23));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 560, 80, -1));

        jLabel11.setText("Search by");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, -1, -1));

        txtSearchStud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchStudKeyPressed(evt);
            }
        });
        getContentPane().add(txtSearchStud, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, 207, -1));

        btnSearchStud.setText("SEARCH");
        btnSearchStud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchStudActionPerformed(evt);
            }
        });
        btnSearchStud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSearchStudKeyPressed(evt);
            }
        });
        getContentPane().add(btnSearchStud, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 180, -1, -1));

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        tblStudent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblStudentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblStudentKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tblStudent);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 224, 690, 206));

        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 500, -1, -1));

        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 500, -1, -1));

        jLabel12.setText("Email");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 191, -1));

        jLabel13.setText("Student ID");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        cmbSrchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Occupation", "Grade", " ", " " }));
        getContentPane().add(cmbSrchBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, -1, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 51, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 40, 540));

        btnLoad.setText("SHOW ALL");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });
        getContentPane().add(btnLoad, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, -1, -1));
        getContentPane().add(txtStudID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 190, -1));

        btnExcel.setText("EXPORT TO EXCELL");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 440, 150, -1));

        lblNameAlert.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblNameAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 190, 20));

        grpOccupation.add(rdbStudent);
        rdbStudent.setText("Student");
        rdbStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbStudentActionPerformed(evt);
            }
        });
        getContentPane().add(rdbStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, -1, -1));

        grpOccupation.add(rdbEmployee);
        rdbEmployee.setText("Employee");
        rdbEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEmployeeActionPerformed(evt);
            }
        });
        getContentPane().add(rdbEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 440, -1, -1));

        grpGender.add(rdbMale);
        rdbMale.setText("Male");
        rdbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMaleActionPerformed(evt);
            }
        });
        getContentPane().add(rdbMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 480, -1, -1));

        grpGender.add(rdbFemale);
        rdbFemale.setText("Female");
        rdbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFemaleActionPerformed(evt);
            }
        });
        getContentPane().add(rdbFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, -1, -1));

        lblContactAlert.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblContactAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 190, 20));

        lblBdayAlert.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblBdayAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 190, 20));

        lblGuardianAlert.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblGuardianAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 410, 190, 30));

        lblEmailAlert.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblEmailAlert, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 306, 190, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DBConnection con = new DBConnection();

        String sql = "delete from Student where Student_ID = ?";
        try {
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.setString(1, txtStudID.getText().toString());
            prep.execute();

            JOptionPane.showMessageDialog(null, "Successfully deleted");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        txtStudID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtContact.setText("");
        txtEmail.setText("");
        txtBirthday.setText("");
        txtGuardian.setText("");
        grpOccupation.clearSelection();
        grpGender.clearSelection();
        cmbGrade.setSelectedIndex(0);
        showTableData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Stud.setStudentID(txtStudID.getText());
        Stud.setStudName(txtName.getText().trim());
        Stud.setStudAddress(txtAddress.getText().trim());
        Stud.setStudContact(Integer.parseInt(txtContact.getText().trim()));
        Stud.setStudEmail(txtEmail.getText().trim());
        Stud.setStudBday(txtBirthday.getText().trim());
        Stud.setStudGuardian(txtGuardian.getText().trim());

        Stud.setStudOccupation(Occupation);
        Stud.setStudGender(Gender);
        Stud.setStudGrade(cmbGrade.getSelectedItem().toString());
        Stud.setStudClass(Class);
        Stud.setStudCourse(Course);

        DatabaseLayer.DBUserConnection up = new DBUserConnection();
        up.updateStud(Stud);

        JOptionPane.showMessageDialog(rootPane, "Updated Succesfully.");
        txtName.setText("");
        txtAddress.setText("");
        txtContact.setText("");
        txtEmail.setText("");
        txtBirthday.setText("");
        txtGuardian.setText("");
        grpOccupation.clearSelection();
        grpGender.clearSelection();
        cmbGrade.setSelectedIndex(0);
        chkEnglish.setSelected(false);
        chkScience.setSelected(false);
        chkMaths.setSelected(false);
        chkGeography.setSelected(false);
        chkCMaths.setSelected(false);
        chkBio.setSelected(false);
        chkChem.setSelected(false);
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);

        showTableData();
        Course = "";
        Class = "";
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchStudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSearchStudKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            DBConnection con = new DBConnection();
            String by = cmbSrchBy.getSelectedItem().toString();
            if (by == "ID") {
                try {
                    String search = txtSearchStud.getText();
                    String sql = "select * from Student where (Student_ID='" + search + "')";
                    PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                    ResultSet rs = prep.executeQuery();
                    tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception ex) {
                    Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Enter value to search");
                }

            } else if (by == "Name") {
                try {
                    String search = txtSearchStud.getText();
                    String sql = "select * from Student where (Name='" + search + "')";
                    PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                    ResultSet rs = prep.executeQuery();
                    tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception ex) {
                    Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Enter value to search");
                }

            } else if (by == "Occupation") {
                try {
                    String search = txtSearchStud.getText();
                    String sql = "select * from Student where (Occupation='" + search + "')";
                    PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                    ResultSet rs = prep.executeQuery();
                    tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception ex) {
                    Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Enter value to search");
                }

            } else if (by == "Grade") {
                try {
                    String search = txtSearchStud.getText();
                    String sql = "select * from Student where (Grade='" + search + "')";
                    PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                    ResultSet rs = prep.executeQuery();
                    tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception ex) {
                    Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Enter value to search");
                }
            }

            txtSearchStud.setText("");
            cmbSrchBy.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnSearchStudKeyPressed

    private void btnSearchStudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchStudActionPerformed
        // TODO add your handling code here:

        DBConnection con = new DBConnection();
        String by = cmbSrchBy.getSelectedItem().toString();
        if (by == "ID") {
            try {
                String search = txtSearchStud.getText();
                String sql = "select * from Student where Student_ID LIKE '%"+search+"%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter value to search");
            }

        } else if (by == "Name") {
            try {
                String search = txtSearchStud.getText();
                String sql = "select * from Student where Name LIKE '%"+search+"%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter value to search");
            }

        } else if (by == "Occupation") {
            try {
                String search = txtSearchStud.getText();
                String sql = "select * from Student where Occupation LIKE '%"+search+"%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter value to search");
            }

        } else if (by == "Grade") {
            try {
                String search = txtSearchStud.getText();
                String sql = "select * from Student where Grade LIKE '%"+search+"%'";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                tblStudent.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception ex) {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter value to search");
            }
        }

        txtSearchStud.setText("");
        cmbSrchBy.setSelectedIndex(0);

    }//GEN-LAST:event_btnSearchStudActionPerformed

    private void txtSearchStudKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchStudKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSearchStud.requestFocus();
        }
    }//GEN-LAST:event_txtSearchStudKeyPressed

    private void tblStudentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_tblStudentKeyReleased

    private void tblStudentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tblStudentKeyPressed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
        // TODO add your handling code here:
        int row = tblStudent.getSelectedRow();
        TableModel model = tblStudent.getModel();
        txtStudID.setText(model.getValueAt(row, 0).toString());
        txtName.setText(model.getValueAt(row, 1).toString());
        txtAddress.setText(model.getValueAt(row, 2).toString());
        txtContact.setText(model.getValueAt(row, 3).toString());
        txtEmail.setText(model.getValueAt(row, 4).toString());
        txtBirthday.setText(model.getValueAt(row, 5).toString());
        txtGuardian.setText(model.getValueAt(row, 6).toString());

        String clz = model.getValueAt(row, 10).toString();
        String course = model.getValueAt(row, 11).toString();

        String Occupation = model.getValueAt(row, 7).toString();
        switch (Occupation) {
            case "Student":
                rdbStudent.setSelected(true);
                rdbEmployee.setSelected(false);
                cmbGrade.setEnabled(true);
                break;
            case "Employee":
                rdbEmployee.setSelected(true);
                rdbStudent.setSelected(false);
                cmbGrade.setEnabled(false);
                break;

        }

        String Gender = model.getValueAt(row, 8).toString();
        switch (Gender) {
            case "Male":
                rdbMale.setSelected(true);
                break;
            case "Female":
                rdbFemale.setSelected(true);
                break;

        }

        String Grade = model.getValueAt(row, 9).toString();
        switch (Grade) {

            case "1":
                cmbGrade.setSelectedIndex(1);
                break;
            case "2":
                cmbGrade.setSelectedIndex(2);
                break;
            case "3":
                cmbGrade.setSelectedIndex(3);
                break;
            case "4":
                cmbGrade.setSelectedIndex(4);
                break;
            case "5":
                cmbGrade.setSelectedIndex(5);
                break;
            case "6":
                cmbGrade.setSelectedIndex(6);
                break;
            case "7":
                cmbGrade.setSelectedIndex(7);
                break;
            case "8":
                cmbGrade.setSelectedIndex(6);
                break;
            case "9":
                cmbGrade.setSelectedIndex(9);
                break;
            case "10":
                cmbGrade.setSelectedIndex(10);
                break;
            case "11":
                cmbGrade.setSelectedIndex(11);
                break;
            case "A/L":
                cmbGrade.setSelectedIndex(12);
                break;

        }

        if (clz.contains("English")) {
            chkEnglish.setSelected(true);
        }
        if (clz.contains("Science")) {
            chkScience.setSelected(true);
        }
        if (clz.contains("Maths")) {
            chkMaths.setSelected(true);
        }
        if (clz.contains("Geography")) {
            chkGeography.setSelected(true);
        }
        if (clz.contains("C.Maths")) {
            chkCMaths.setSelected(true);
        }
        if (clz.contains("Bio")) {
            chkBio.setSelected(true);
        }
        if (clz.contains("Chemistry")) {
            chkChem.setSelected(true);
        }

        if (course.contains("IELTS")) {
            chkIELTS.setSelected(true);
        }
        if (course.contains("FCE")) {
            chkFCE.setSelected(true);
        }
        if (course.contains("KET")) {
            chkKET.setSelected(true);
        }
        if (course.contains("PET")) {
            chkPET.setSelected(true);
        }


    }//GEN-LAST:event_tblStudentMouseClicked

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        showTableData();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtStudID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtContact.setText("");
        txtEmail.setText("");
        txtBirthday.setText("");
        txtGuardian.setText("");
        grpOccupation.clearSelection();
        grpGender.clearSelection();
        cmbGrade.setSelectedIndex(0);

        chkEnglish.setSelected(false);
        chkScience.setSelected(false);
        chkMaths.setSelected(false);
        chkGeography.setSelected(false);
        chkCMaths.setSelected(false);
        chkBio.setSelected(false);
        chkChem.setSelected(false);
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);
        lblBdayAlert.setText(null);
        lblContactAlert.setText(null);
        lblEmailAlert.setText(null);
        lblGuardianAlert.setText(null);
        lblNameAlert.setText(null);

    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            Stud.setStudentID(txtStudID.getText().trim());
            Stud.setStudName(txtName.getText().trim());
            Stud.setStudAddress(txtAddress.getText().trim());
            Stud.setStudContact(Integer.parseInt(txtContact.getText().trim()));
            Stud.setStudEmail(txtEmail.getText().trim());
            Stud.setStudBday(txtBirthday.getText().trim());
            Stud.setStudGuardian(txtGuardian.getText().trim());
            Stud.setStudOccupation(Occupation);
            Stud.setStudGender(Gender);
            Stud.setStudCourse(Course);
            Stud.setStudGrade(cmbGrade.getSelectedItem().toString());

            DatabaseLayer.DBUserConnection up = new DBUserConnection();

            up.AddStud(Stud);

            if (chkMaths.isSelected() == true) {

                up.addMath(Stud);
            }
            if (chkEnglish.isSelected() == true) {
                up.addEnglish(Stud);
            }
            if (chkScience.isSelected() == true) {
                up.addScience(Stud);
            }
            if (chkGeography.isSelected() == true) {
                up.addGeography(Stud);
            }
            if (chkCMaths.isSelected() == true) {
                up.addCMaths(Stud);
            }
            if (chkBio.isSelected() == true) {
                up.addBio(Stud);
            }
            if (chkChem.isSelected() == true) {
                up.addChem(Stud);
            }

            if (chkIELTS.isSelected() == true) {
                up.addIELTS(Stud);
            }
            if (chkFCE.isSelected() == true) {
                up.addFCE(Stud);
            }
            if (chkKET.isSelected() == true) {
                up.addKET(Stud);
            }
            if (chkPET.isSelected() == true) {
                up.addPET(Stud);
            }

            JOptionPane.showMessageDialog(rootPane, "Student Added.");
            txtStudID.setText("");
            txtName.setText("");
            txtAddress.setText("");
            txtContact.setText("");
            txtEmail.setText("");
            txtBirthday.setText("");
            txtGuardian.setText("");
            grpOccupation.clearSelection();
            grpGender.clearSelection();
            cmbGrade.setSelectedIndex(0);
            chkEnglish.setSelected(false);
            chkScience.setSelected(false);
            chkMaths.setSelected(false);
            chkGeography.setSelected(false);
            chkCMaths.setSelected(false);
            chkBio.setSelected(false);
            chkChem.setSelected(false);
            chkIELTS.setSelected(false);
            chkFCE.setSelected(false);
            chkKET.setSelected(false);
            chkPET.setSelected(false);

            showTableData();

            Course = "";
            Class = "";
        }
    }//GEN-LAST:event_btnAddKeyPressed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        // TODO add your handling code here:
        if (txtStudID.getText().toString().equals("") || txtName.getText().equals("") ||  txtAddress.getText().equals("") || txtContact.getText().toString().equals("") || txtEmail.getText().equals("")
                || txtBirthday.getText().equals("") || txtGuardian.getText().equals("")) {
                
            JOptionPane.showMessageDialog(rootPane, "Please provide all the details!");
            
        } else {
            
            
            Stud.setStudentID(txtStudID.getText().trim());
            Stud.setStudName(txtName.getText().trim());
            Stud.setStudAddress(txtAddress.getText().trim());
            Stud.setStudContact(Integer.parseInt(txtContact.getText().trim()));
            Stud.setStudEmail(txtEmail.getText().trim());
            Stud.setStudBday(txtBirthday.getText().trim());
            Stud.setStudGuardian(txtGuardian.getText().trim());

            Stud.setStudOccupation(Occupation);
            Stud.setStudGender(Gender);
            Stud.setStudGrade(cmbGrade.getSelectedItem().toString());
            Stud.setStudClass(Class);
            Stud.setStudCourse(Course);

            DatabaseLayer.DBUserConnection up = new DBUserConnection();
            up.AddStud(Stud);

            if (chkMaths.isSelected() == true) {

                up.addMath(Stud);
            }
            if (chkEnglish.isSelected() == true) {
                up.addEnglish(Stud);
            }
            if (chkScience.isSelected() == true) {
                up.addScience(Stud);
            }
            if (chkGeography.isSelected() == true) {
                up.addGeography(Stud);
            }
            if (chkCMaths.isSelected() == true) {
                up.addCMaths(Stud);
            }
            if (chkBio.isSelected() == true) {
                up.addBio(Stud);
            }
            if (chkChem.isSelected() == true) {
                up.addChem(Stud);
            }

            if (chkIELTS.isSelected() == true) {
                up.addIELTS(Stud);
            }
            if (chkFCE.isSelected() == true) {
                up.addFCE(Stud);
            }
            if (chkKET.isSelected() == true) {
                up.addKET(Stud);
            }
            if (chkPET.isSelected() == true) {
                up.addPET(Stud);
            }

            JOptionPane.showMessageDialog(rootPane, "Student Added.");
            txtStudID.setText("");
            txtName.setText("");
            txtAddress.setText("");
            txtContact.setText("");
            txtEmail.setText("");
            txtBirthday.setText("");
            txtGuardian.setText("");
            grpOccupation.clearSelection();
            grpGender.clearSelection();
            cmbGrade.setSelectedIndex(0);
            chkEnglish.setSelected(false);
            chkScience.setSelected(false);
            chkMaths.setSelected(false);
            chkGeography.setSelected(false);
            chkCMaths.setSelected(false);
            chkBio.setSelected(false);
            chkChem.setSelected(false);
            chkIELTS.setSelected(false);
            chkFCE.setSelected(false);
            chkKET.setSelected(false);
            chkPET.setSelected(false);

            showTableData();
            Course = "";
            Class = "";
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbGradeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbGradeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAdd.requestFocus();
        }
    }//GEN-LAST:event_cmbGradeKeyPressed

    private void cmbGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGradeActionPerformed

    private void txtGuardianKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGuardianKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            rdbStudent.requestFocus();
        }

    }//GEN-LAST:event_txtGuardianKeyPressed

    private void txtBirthdayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBirthdayKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtGuardian.requestFocus();
        }
    }//GEN-LAST:event_txtBirthdayKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtBirthday.requestFocus();
        }
    }//GEN-LAST:event_txtEmailKeyPressed

    private void txtContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtContactKeyPressed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtContact.requestFocus();
        }
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtAddress.requestFocus();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed

        FileOutputStream excelFOU = null;
        BufferedOutputStream excelBOU = null;
        XSSFWorkbook excelJTableExporter = null;

        JFileChooser excelFileChooser = new JFileChooser("Z:\\CELS");
        excelFileChooser.setDialogTitle("Save As");
        FileNameExtensionFilter ext = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(ext);
        int excelChooser = excelFileChooser.showSaveDialog(null);

        if (excelChooser == JFileChooser.APPROVE_OPTION) {

            try {
                excelJTableExporter = new XSSFWorkbook();
                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
                for (int i = 0; i < tblStudent.getRowCount(); i++) {
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < tblStudent.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);
                        excelCell.setCellValue(tblStudent.getValueAt(i, j).toString());

                    }
                }
                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                excelBOU = new BufferedOutputStream(excelFOU);
                excelJTableExporter.write(excelBOU);
                JOptionPane.showMessageDialog(null, "Exported Successfully !");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (excelBOU != null) {
                        excelBOU.close();

                        if (excelFOU != null) {
                            excelFOU.close();
                        }
                    }
                    if (excelJTableExporter != null) {
                        excelJTableExporter.close();
                    }

                } catch (IOException ex) {
                    Logger.getLogger(Student.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_btnExcelActionPerformed

    private void txtGuardianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGuardianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGuardianActionPerformed

    private void rdbStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbStudentActionPerformed

        Occupation = "Student";
        if (rdbStudent.isSelected()) {
            cmbGrade.setEnabled(true);
            cmbGrade.setEnabled(true);
            chkEnglish.setEnabled(true);
            chkScience.setEnabled(true);
            chkMaths.setEnabled(true);
            chkGeography.setEnabled(true);
            chkCMaths.setEnabled(true);
            chkBio.setEnabled(true);
            chkChem.setEnabled(true);

            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);

        }
    }//GEN-LAST:event_rdbStudentActionPerformed

    private void rdbEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEmployeeActionPerformed

        Occupation = "Employee";
        if (rdbEmployee.isSelected()) {
            cmbGrade.setEnabled(false);
            chkEnglish.setEnabled(false);
            chkScience.setEnabled(false);
            chkMaths.setEnabled(false);
            chkGeography.setEnabled(false);
            chkCMaths.setEnabled(false);
            chkBio.setEnabled(false);
            chkChem.setEnabled(false);

            chkIELTS.setEnabled(true);
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);

        }

    }//GEN-LAST:event_rdbEmployeeActionPerformed

    private void rdbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMaleActionPerformed

        Gender = "Male";
    }//GEN-LAST:event_rdbMaleActionPerformed

    private void rdbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFemaleActionPerformed

        Gender = "Female";
    }//GEN-LAST:event_rdbFemaleActionPerformed

    private void chkEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEnglishActionPerformed

        Class += "English ";
    }//GEN-LAST:event_chkEnglishActionPerformed

    private void chkScienceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkScienceActionPerformed

        Class += "Science ";
    }//GEN-LAST:event_chkScienceActionPerformed

    private void chkMathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMathsActionPerformed
        Class += "Maths ";
    }//GEN-LAST:event_chkMathsActionPerformed

    private void chkGeographyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGeographyActionPerformed
        Class += "Geography ";
    }//GEN-LAST:event_chkGeographyActionPerformed

    private void chkCMathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCMathsActionPerformed

        Class += "C.Maths ";
    }//GEN-LAST:event_chkCMathsActionPerformed

    private void chkBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBioActionPerformed
        Class += "Bio ";
    }//GEN-LAST:event_chkBioActionPerformed

    private void chkChemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkChemActionPerformed
        Class += "Chemistry ";
    }//GEN-LAST:event_chkChemActionPerformed

    private void chkIELTSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIELTSActionPerformed
        Course += "IELTS ";
    }//GEN-LAST:event_chkIELTSActionPerformed

    private void chkFCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFCEActionPerformed
        Course += "FCE ";
    }//GEN-LAST:event_chkFCEActionPerformed

    private void chkKETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkKETActionPerformed
        Course += "KET ";
    }//GEN-LAST:event_chkKETActionPerformed

    private void chkPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPETActionPerformed
        Course += "PET ";
    }//GEN-LAST:event_chkPETActionPerformed

    private void txtContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContactActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased

        String namePattern = "^[a-zA-Z\\s]{0,30}$";
        Pattern patt = Pattern.compile(namePattern);
        Matcher match = patt.matcher(txtName.getText());
        if (!match.matches()) {
            lblNameAlert.setText("Naming is incorrect");
        } else {
            lblNameAlert.setText(null);
        }
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyReleased

    }//GEN-LAST:event_txtAddressKeyReleased

    private void txtContactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContactKeyReleased
        String namePattern = "^[0-9]{10}$";
        Pattern patt = Pattern.compile(namePattern);
        Matcher match = patt.matcher(txtContact.getText());
        if (!match.matches()) {
            lblContactAlert.setText("Incorrect contact number");
        } else {
            lblContactAlert.setText(null);
        }
    }//GEN-LAST:event_txtContactKeyReleased

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        String namePattern = "^[a-zA-Z0-9]{0,20}[@][a-zA-Z]{0,7}[.][a-zA-Z]{2,5}$";
        Pattern patt = Pattern.compile(namePattern);
        Matcher match = patt.matcher(txtEmail.getText());
        if (!match.matches()) {
            lblEmailAlert.setText("Incorrect Email address");
        } else {
            lblEmailAlert.setText(null);
        }
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtBirthdayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBirthdayKeyReleased
        String namePattern = "^[0-9]{4}.[0-9]{2}.[0-9]{0,2}$";
        Pattern patt = Pattern.compile(namePattern);
        Matcher match = patt.matcher(txtBirthday.getText());
        if (!match.matches()) {
            lblBdayAlert.setText("Invalid format (yyyy.mm.dd)");
        } else {
            lblBdayAlert.setText(null);
        }
    }//GEN-LAST:event_txtBirthdayKeyReleased

    private void txtGuardianKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGuardianKeyReleased
        String namePattern = "^[a-zA-Z\\s]{0,30}$";
        Pattern patt = Pattern.compile(namePattern);
        Matcher match = patt.matcher(txtGuardian.getText());
        if (!match.matches()) {
            lblGuardianAlert.setText("Naming is incorrect");
        } else {
            lblGuardianAlert.setText(null);
        }
    }//GEN-LAST:event_txtGuardianKeyReleased

    private void btnAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddKeyReleased

    private void txtBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBirthdayActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtBirthdayActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSearchStud;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkBio;
    private javax.swing.JCheckBox chkCMaths;
    private javax.swing.JCheckBox chkChem;
    private javax.swing.JCheckBox chkEnglish;
    private javax.swing.JCheckBox chkFCE;
    private javax.swing.JCheckBox chkGeography;
    private javax.swing.JCheckBox chkIELTS;
    private javax.swing.JCheckBox chkKET;
    private javax.swing.JCheckBox chkMaths;
    private javax.swing.JCheckBox chkPET;
    private javax.swing.JCheckBox chkScience;
    private javax.swing.JComboBox<String> cmbGrade;
    private javax.swing.JComboBox<String> cmbSrchBy;
    private javax.swing.ButtonGroup grpGender;
    private javax.swing.ButtonGroup grpOccupation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBdayAlert;
    private javax.swing.JLabel lblContactAlert;
    private javax.swing.JLabel lblEmailAlert;
    private javax.swing.JLabel lblGuardianAlert;
    private javax.swing.JLabel lblNameAlert;
    private javax.swing.JRadioButton rdbEmployee;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JRadioButton rdbStudent;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtBirthday;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGuardian;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSearchStud;
    private javax.swing.JTextField txtStudID;
    // End of variables declaration//GEN-END:variables
}
