/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;

import DatabaseLayer.DBConnection;
import DatabaseLayer.DBUserConnection;
import javax.swing.JOptionPane;
import Models.ExamVer;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JTable; 
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


public class Exam extends javax.swing.JInternalFrame {

    Models.ExamVer Exm;  
    
    /**
     * Creates new form Class
     */
    public Exam() {
        initComponents();
        Exm = new ExamVer();
        showTableData();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbHall = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ExamTbl = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        txtSearchExam = new javax.swing.JTextField();
        btnSearchExam = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cmbExam = new javax.swing.JComboBox<>();
        btnRegisterExam = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        cmbSearch = new javax.swing.JComboBox<>();
        showBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        cmbTime = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Type");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 60, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Hall");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 50, 30));

        cmbHall.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmbHall.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Hall", "Hall 01", "Hall 02", "Hall 03", "" }));
        cmbHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHallActionPerformed(evt);
            }
        });
        getContentPane().add(cmbHall, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 230, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Time");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 60, 30));

        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });
        getContentPane().add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 150, 30));

        ExamTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Type", "Hall", "Time", "Date"
            }
        ));
        ExamTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExamTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ExamTbl);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 150, 690, 260));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 153));
        jLabel11.setText("Search Exam");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        txtSearchExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchExamActionPerformed(evt);
            }
        });
        getContentPane().add(txtSearchExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 50, 330, 30));

        btnSearchExam.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearchExam.setText("Search");
        btnSearchExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchExamActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearchExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, 120, 30));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.setPreferredSize(new java.awt.Dimension(71, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 90, 40));

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.setMaximumSize(new java.awt.Dimension(61, 25));
        btnClear.setPreferredSize(new java.awt.Dimension(71, 23));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        getContentPane().add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 100, 40));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCancel.setText("CANCEL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, -1, 40));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 530, 120, 40));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 540, 110, 40));

        cmbExam.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmbExam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Exam", "IELTS", "FCE", "PET", "KET" }));
        cmbExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbExamActionPerformed(evt);
            }
        });
        getContentPane().add(cmbExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 120, 30));

        btnRegisterExam.setBackground(new java.awt.Color(153, 153, 153));
        btnRegisterExam.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRegisterExam.setForeground(new java.awt.Color(0, 0, 102));
        btnRegisterExam.setText("Student Exam Registration ");
        btnRegisterExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterExamActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegisterExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 520, 300, 50));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Exam ID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 60, 30));

        lblId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblId.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 230, 30));

        cmbSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Type", "Hall", "Time", "Date" }));
        getContentPane().add(cmbSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, 60, 30));

        showBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        showBtn.setText("Show All");
        showBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showBtnActionPerformed(evt);
            }
        });
        getContentPane().add(showBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 120, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, 50, 30));
        getContentPane().add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 230, 30));

        cmbTime.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmbTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".AM", ".PM" }));
        cmbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTimeActionPerformed(evt);
            }
        });
        getContentPane().add(cmbTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 60, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, -1));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 10, 630));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Exam Table");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 110, -1, -1));
        getContentPane().add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, -1, -1));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 32, 1100, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 51));
        jLabel7.setText("Exam Managment");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 220, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 153));
        jLabel8.setText("Exam Details");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 130, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
      lblId.setText("");  
      cmbExam.setSelectedIndex(0);
      cmbHall.setSelectedIndex(0);
      txtTime.setText("");
      txtDate.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void cmbExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbExamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbExamActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int Type = cmbExam.getSelectedIndex();
        int Hall= cmbHall.getSelectedIndex();
        String Time  = txtTime.getText();
        String Date = txtDate.getText();
        
        
        if ((Type == 0) || (Hall == 0) || (Time.isEmpty())  ||(Date == null)){
            JOptionPane.showMessageDialog(this, "Please Select Correct Value");
        }else{
        
            Exm.setExamType(cmbExam.getSelectedItem().toString());
            Exm.setExamHall(cmbHall.getSelectedItem().toString());
            Exm.setExamTime(txtTime.getText() + cmbTime.getSelectedItem().toString());
            Exm.setExamDate(txtDate.getText());
            
            DatabaseLayer.DBUserConnection up = new DBUserConnection();
            up.AddExam(Exm);
            JOptionPane.showMessageDialog(rootPane, "Exam Added Successfully");
        
            cmbExam.setSelectedIndex(0);
            cmbHall.setSelectedIndex(0);
            txtTime.setText("");
            txtDate.setText(null);
            showTableData();
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHallActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose(); 
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DBConnection con = new DBConnection();
        String sql = "update Exam set ExamType = ?, ExamHall = ?, ExamTime = ?, ExamDate = ? where ExamID = ?";
        int Type = cmbExam.getSelectedIndex();
        int Hall= cmbHall.getSelectedIndex();
        String Time  = txtTime.getText();
        String Date = txtDate.getText();
        
        
        try {
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.setString(1, cmbExam.getSelectedItem().toString());
            prep.setString(2, cmbHall.getSelectedItem().toString());
            prep.setString(3, txtTime.getText());
            prep.setString(4, txtDate.getText());
            prep.setString(5, lblId.getText());
            prep.executeUpdate();
           
            
            if ((Type == 0) || (Hall == 0) || (Time.isEmpty())  ||(Date == null)){
            JOptionPane.showMessageDialog(this, "Please Select Correct Value");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Updated");
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        showTableData();   
       
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        DBConnection con = new DBConnection();
        String sql = "delete from Exam where ExamID = ?";
        int Type = cmbExam.getSelectedIndex();
        int Hall= cmbHall.getSelectedIndex();
        String Time  = txtTime.getText();
        String Date = txtDate.getText();
        try {
            if ((Type == 0) || (Hall == 0) || (Time.isEmpty())  ||(Date == null)){
            JOptionPane.showMessageDialog(this, "Please Select value for delete");
            }else{
             PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
             prep.setString(1, lblId.getText());
             prep.execute();
             
            
             JOptionPane.showMessageDialog(null, "Deleted");
            }
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
         showTableData();
         
         lblId.setText("");  
         cmbExam.setSelectedIndex(0);
         cmbHall.setSelectedIndex(0);
         txtTime.setText("");
         txtDate.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void ExamTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExamTblMouseClicked
            int row = ExamTbl.getSelectedRow();
            TableModel model = ExamTbl.getModel();
            lblId.setText(model.getValueAt(row, 0).toString());
            String type = model.getValueAt(row, 1).toString();
            String time = model.getValueAt(row, 3).toString();
            String hall = model.getValueAt(row, 2).toString();
            String input;
            
            if (time.contains(".AM")) {
            cmbTime.setSelectedIndex(0);

            }
            if (time.contains(".PM")) {
            cmbTime.setSelectedIndex(1);

            }
            
            
                switch(type){
                    case "IELTS":
                        cmbExam.setSelectedIndex(1);
                        break;
                    case "FCE":
                        cmbExam.setSelectedIndex(2);
                        break;
                    case "PET":
                        cmbExam.setSelectedIndex(3);
                        break;
                    case "KET":
                        cmbExam.setSelectedIndex(4);
                        break;
                }
            
                switch(hall){
                    case "Hall 01":            
                        cmbHall.setSelectedIndex(1);
                        break;
                    case "Hall 02":
                        cmbHall.setSelectedIndex(2);
                        break;
                    case "Hall 03":
                        cmbHall.setSelectedIndex(3);
                        break; 
                }
                
                if(time.length() > 5 ){
                    
                    input = time.substring(0,5);
                    txtTime.setText(input);
                }

            txtDate.setText(model.getValueAt(row, 4).toString());
            
    }//GEN-LAST:event_ExamTblMouseClicked

    private void btnSearchExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchExamActionPerformed

        DBConnection con = new DBConnection();
        String by = cmbSearch.getSelectedItem().toString();
        if(by=="ID"){
            try{
                String search = txtSearchExam.getText();
                String sql = "select * from Exam where (ExamID='"+search+"')";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                ExamTbl.setModel(DbUtils.resultSetToTableModel(rs));
            }catch (Exception ex){
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter Value to Search");
        }
        }
        else if(by=="Type"){
            try{
                String search = txtSearchExam.getText();
                String sql = "select * from Exam where (ExamType='"+search+"')";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                ExamTbl.setModel(DbUtils.resultSetToTableModel(rs));
            }catch (Exception ex){
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter Value to Search");
        }
        }
        else if(by=="Hall"){
            try{
                String search = txtSearchExam.getText();
                String sql = "select * from Exam where (ExamHall='"+search+"')";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                ExamTbl.setModel(DbUtils.resultSetToTableModel(rs));
            }catch (Exception ex){
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter Value to Search");
        }
        }
        else if(by=="Time"){
            try{
                String search = txtSearchExam.getText();
                String sql = "select * from Exam where (ExamTime='"+search+"')";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery(); 
                ExamTbl.setModel(DbUtils.resultSetToTableModel(rs));  
            }catch (Exception ex){
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter Value to Search");
        }
        }
        else if(by=="Date"){
            try{
                String search = txtSearchExam.getText();
                String sql = "select * from Exam where (ExamDate='"+search+"')";
                PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
                ResultSet rs = prep.executeQuery();
                ExamTbl.setModel(DbUtils.resultSetToTableModel(rs));
            }catch (Exception ex){
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Enter Value to Search");
        }
        }
        
    }//GEN-LAST:event_btnSearchExamActionPerformed

    private void showBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showBtnActionPerformed
        try {
            DBConnection con = new DBConnection(); 
            String sql = "select * from Exam";  
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.executeQuery();

            ExamTbl.setModel(DbUtils.resultSetToTableModel(prep.executeQuery()));

        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_showBtnActionPerformed

    private void txtSearchExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchExamActionPerformed
       
    }//GEN-LAST:event_txtSearchExamActionPerformed

    private void cmbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTimeActionPerformed

        /*String selectedValue = cmbTime.getSelectedItem().toString();      
        txtTime.setText(txtTime.getText()+selectedValue);  */  
        
        
    }//GEN-LAST:event_cmbTimeActionPerformed

    private void btnRegisterExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterExamActionPerformed
        
        StudentExamRegistration Ef = new StudentExamRegistration();
        JDesktopPane HomePane = getDesktopPane();
        HomePane.add(Ef);
        Ef.show();
        
    }//GEN-LAST:event_btnRegisterExamActionPerformed
    public void showTableData() {

        try {
            DBConnection con = new DBConnection();
            String sql = "select * from Exam";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.executeQuery();  

            ExamTbl.setModel(DbUtils.resultSetToTableModel(prep.executeQuery()));

        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage()); 
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ExamTbl;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRegisterExam;
    private javax.swing.JButton btnSearchExam;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbExam;
    private javax.swing.JComboBox<String> cmbHall;
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JComboBox<String> cmbTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblId;
    private javax.swing.JButton showBtn;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtSearchExam;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables

    private PreparedStatement execute() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
