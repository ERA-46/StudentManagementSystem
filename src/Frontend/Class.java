/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontend;
import Models.ClassAdd;
import DatabaseLayer.*;
import DatabaseLayer.DBConnection;
import Models.CourseAdd;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import java.sql.ResultSet;
import java.util.Date;

/**
 *
 * @author sange  
 */
public class Class extends javax.swing.JInternalFrame {

    Models.ClassAdd Class;
    Models.CourseAdd Course;
  
    DBUserConnection meth = new DBUserConnection();
    
    public Class() {
        initComponents();
        Class = new ClassAdd();
        Course = new CourseAdd();
        showTableDataClass();
        showTableDataCourse();
        showTableDataTeachers();
        lblDis.setVisible(false);
        lblDisCouse.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtSearchByClass = new javax.swing.JTextField();
        cmbSearchByClass = new javax.swing.JComboBox<>();
        btnSearchClass = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtSearchByCourse = new javax.swing.JTextField();
        cmbSearchByCourse = new javax.swing.JComboBox<>();
        btnSearchCource = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabCourse = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnUpdateC = new javax.swing.JButton();
        btnDeleteC = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtCourseNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCourseId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbHallCourse = new javax.swing.JComboBox<>();
        txtTimeCourse = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cmbDateCourse = new javax.swing.JComboBox<>();
        lblCource = new javax.swing.JLabel();
        chkIELTS = new javax.swing.JCheckBox();
        chkKET = new javax.swing.JCheckBox();
        chkPET = new javax.swing.JCheckBox();
        chkFCE = new javax.swing.JCheckBox();
        btnAddCourse = new javax.swing.JButton();
        btnClearCourse = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblDisCouse = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtClassNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtClassId = new javax.swing.JTextField();
        cmbSub = new javax.swing.JComboBox<>();
        lblClsN1 = new javax.swing.JLabel();
        cmbGrade = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cmbHall = new javax.swing.JComboBox<>();
        txtTime = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmbDate = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtTeacherClass = new javax.swing.JTextField();
        lblDis = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTabAcadmic = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setClosable(true);

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel11.setText("Search Class :- ");

        cmbSearchByClass.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ClassNo", "ClassId", "Grade", "Subject", "Hall", "Time", "Day", "Teacher" }));

        btnSearchClass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearchClass.setText("SEARCH");
        btnSearchClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchClassActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel12.setText("Search Course :- ");

        cmbSearchByCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CourseNo", "CourseId", "CourseTime", "CourseDay", "CourseHall", "CourseType" }));

        btnSearchCource.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearchCource.setText("SEARCH");
        btnSearchCource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCourceActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Class Table : ");

        jTable1.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTabCourse.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jTabCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTabCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabCourseMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTabCourse);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Course Table : ");

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdate.setText(" UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setText(" DELETE");
        btnDelete.setPreferredSize(new java.awt.Dimension(71, 23));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Show All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnUpdateC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdateC.setText(" UPDATE");
        btnUpdateC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCActionPerformed(evt);
            }
        });

        btnDeleteC.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDeleteC.setText(" DELETE");
        btnDeleteC.setPreferredSize(new java.awt.Dimension(71, 23));
        btnDeleteC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Show All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Course No :");

        txtCourseNo.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Course Id :");

        txtCourseId.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Hall : ");

        cmbHallCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Hall-", "Hall 01", "Hall 02", "Hall 03" }));

        txtTimeCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimeCourseMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Time : ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Day : ");

        cmbDateCourse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Day -", "Sunday", "Monday ", "Tuesday", "Wednesday", "Thursday", " Friday ", "Saturday" }));
        cmbDateCourse.setPreferredSize(new java.awt.Dimension(86, 20));

        lblCource.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCource.setText("Courses : ");

        chkIELTS.setText("IELTS");
        chkIELTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkIELTSMouseClicked(evt);
            }
        });
        chkIELTS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIELTSActionPerformed(evt);
            }
        });

        chkKET.setText("KET");
        chkKET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkKETActionPerformed(evt);
            }
        });

        chkPET.setText("PET");
        chkPET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPETActionPerformed(evt);
            }
        });

        chkFCE.setText("FCE");
        chkFCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFCEActionPerformed(evt);
            }
        });

        btnAddCourse.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddCourse.setText(" ADD");
        btnAddCourse.setPreferredSize(new java.awt.Dimension(71, 23));
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        btnClearCourse.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClearCourse.setText(" CLEAR");
        btnClearCourse.setPreferredSize(new java.awt.Dimension(71, 23));
        btnClearCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCourseActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 255));
        jLabel3.setText("Course Details");

        lblDisCouse.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(112, 112, 112)
                                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(8, 8, 8)
                                    .addComponent(txtCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCource, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbHallCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbDateCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(chkIELTS)
                                            .addComponent(chkKET))
                                        .addGap(33, 33, 33)
                                        .addComponent(chkFCE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(chkPET))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblDisCouse, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtTimeCourse))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbHallCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimeCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDisCouse, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbDateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkFCE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCource)
                                .addComponent(chkIELTS)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chkKET))
                    .addComponent(chkPET))
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Class No :");

        txtClassNo.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Class Id :");

        txtClassId.setEditable(false);

        cmbSub.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Sub-", "Science", "Maths", "Geography", "Combined Maths", "Biology", "Chemistry", "None" }));
        cmbSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubActionPerformed(evt);
            }
        });

        lblClsN1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblClsN1.setText("Class Name : ");

        cmbGrade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Grade-", "1", "2", "3", "4", "5", "6", "7", "8", "10", "11", "A/L", "None" }));
        cmbGrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGradeActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Hall : ");

        cmbHall.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Hall-", "Hall 01", "Hall 02", "Hall 03" }));

        txtTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTimeMouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Time : ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Day : ");

        cmbDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select Day -", "Sunday", "Monday ", "Tuesday", "Wednesday", "Thursday", " Friday ", "Saturday" }));
        cmbDate.setPreferredSize(new java.awt.Dimension(86, 20));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Teacher : ");

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setText(" ADD");
        btnAdd.setPreferredSize(new java.awt.Dimension(71, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText(" CLEAR");
        btnClear.setPreferredSize(new java.awt.Dimension(71, 23));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 255));
        jLabel18.setText("Class Details");

        txtTeacherClass.setEditable(false);

        lblDis.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(lblClsN1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cmbSub, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(txtClassId, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(txtClassNo, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(12, 12, 12)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbHall, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTime)
                                .addComponent(cmbDate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTeacherClass)
                                .addComponent(lblDis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClassNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClassId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClsN1)
                    .addComponent(cmbGrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbHall, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(1, 1, 1)
                .addComponent(lblDis, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel16))
                    .addComponent(cmbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtTeacherClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabAcadmic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTabAcadmic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabAcadmicMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTabAcadmic);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchByClass, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(cmbSearchByClass, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchClass)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(46, 46, 46))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSearchByCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSearchByCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchCource)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdateC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteC, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1372, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton2)
                                        .addComponent(btnDeleteC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUpdateC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnSearchCource)
                                        .addComponent(cmbSearchByCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSearchByCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearchClass)
                                .addComponent(cmbSearchByClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSearchByClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnClearCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCourseActionPerformed
        // TODO add your handling code here:
        
        txtCourseNo.setText("");
        txtCourseId.setText("");
        lblDisCouse.setText("");
        cmbHallCourse.setSelectedIndex(0);
        txtTimeCourse.setText("");
        cmbDateCourse.setSelectedIndex(0);
        
       
        
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);
        chkFCE.setEnabled(true);
        chkKET.setEnabled(true);
        chkPET.setEnabled(true);
        chkIELTS.setEnabled(true);
    }//GEN-LAST:event_btnClearCourseActionPerformed
  
    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
         Date obj = new Date();
        
        String dat = obj.toString();
        String dte[] = dat.split(" ");
        txtCourseId.setText(dte[5]+"Course");
        int hall = cmbHallCourse.getSelectedIndex();
        String time = txtTimeCourse.getText();
        int date = cmbDateCourse.getSelectedIndex();
        
        
        if ((hall == 0 )|| (date == 0) || (hall == 0) || (time.isEmpty())){
            JOptionPane.showMessageDialog(this, "Please Select Correct Value");
        }
        else{
        
                Course.setCourse_Hall(cmbHallCourse.getSelectedItem().toString());
                Course.setCourse_Time(txtTimeCourse.getText());
                Course.setCourse_Day(cmbDateCourse.getSelectedItem().toString());
                
                if(chkIELTS.isSelected())
                {
                    Course.setCourse_Type(String.valueOf(chkIELTS.getText()));
                }
                if(chkFCE.isSelected())
                {
                    Course.setCourse_Type(String.valueOf(chkFCE.getText()));
                }
                if(chkKET.isSelected())
                {
                    Course.setCourse_Type(String.valueOf(chkKET.getText()));
                }
                if(chkPET.isSelected())
                {
                    Course.setCourse_Type(String.valueOf(chkPET.getText()));
                }
                String value = Course.getCourse_Type();
                String valu = txtCourseId.getText();
                txtCourseId.setText(valu + value);
                Course.setCourse_Id(txtCourseId.getText());
                DatabaseLayer.DBUserConnection up = new DBUserConnection();
                up.AddCourse(Course);

                JOptionPane.showMessageDialog(this, "Course Added Successfully :-) "); 
                showTableDataCourse();
        }      
            
       
        cmbHallCourse.setSelectedIndex(0);
        
        txtTimeCourse.setText("");
        cmbDateCourse.setSelectedIndex(0);
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);
        txtCourseId.setText("");
        
        chkFCE.setEnabled(true);
        chkKET.setEnabled(true);
        chkPET.setEnabled(true);
        chkIELTS.setEnabled(true);
    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Class.setClassNo(txtClassNo.getText());
        Class.setClassId(txtClassId.getText());
        Class.setClassName(cmbGrade.getSelectedItem().toString());
        Class.setClassSubject(cmbSub.getSelectedItem().toString());
        Class.setClassHall(cmbHall.getSelectedItem().toString());
        Class.setClassTime(txtTime.getText());
        Class.setClassDate(cmbDate.getSelectedItem().toString());
        Class.setClassTeacher(txtTeacherClass.getText());


        DatabaseLayer.DBUserConnection up = new DBUserConnection();
            up.UpadteClass(Class);
            
            txtClassId.setText("");
            txtClassNo.setText("");
            cmbGrade.setSelectedIndex(0);
            cmbSub.setSelectedIndex(0);
            cmbHall.setSelectedIndex(0);
            txtTeacherClass.setText("");
            txtTime.setText("");
            cmbDate.setSelectedIndex(0);
                
            JOptionPane.showMessageDialog(this, "Class Updated Successfully  :-) ");
            showTableDataClass();
        
               
         
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        txtClassNo.setText(model.getValueAt(row, 0).toString());
        txtClassId.setText(model.getValueAt(row, 1).toString());
        String grade = model.getValueAt(row, 2).toString();
            switch(grade){
                case "1":
                    cmbGrade.setSelectedIndex(1);
                    break;
                case "2":
                    cmbGrade.setSelectedIndex(2);
                    break;
                case "3":
                    cmbGrade.setSelectedIndex(3);
                    break;
                case "4":
                    cmbGrade.setSelectedIndex(4);
                    break;
                case "5":
                    cmbGrade.setSelectedIndex(5);
                    break;
                case "6":
                    cmbGrade.setSelectedIndex(6);
                    break;
                case "7":
                    cmbGrade.setSelectedIndex(7);
                    break;
                case "8":
                    cmbGrade.setSelectedIndex(8);
                    break;
                case "9":
                    cmbGrade.setSelectedIndex(9);
                    break;
                case "10":
                    cmbGrade.setSelectedIndex(10);
                    break;
                case "11":
                    cmbGrade.setSelectedIndex(11);
                    break;
                case "A/L":
                    cmbGrade.setSelectedIndex(12);
                    break;
            }
        String Subject = model.getValueAt(row, 3).toString();
           switch(Subject){
                case "Science":
                    cmbSub.setSelectedIndex(1);
                    break;
                case "Maths":
                    cmbSub.setSelectedIndex(2);
                    break;
                case "Geography":
                    cmbSub.setSelectedIndex(3);
                    break;
                case "Combined Maths":
                    cmbSub.setSelectedIndex(4);
                    break;
                case "Biolagy":
                    cmbSub.setSelectedIndex(5);
                    break;
                case "Chemistry":
                    cmbSub.setSelectedIndex(6);
                    break;
           }
        String Hall = model.getValueAt(row, 4).toString();
            switch(Hall){
                case "Hall 01":
                    cmbHall.setSelectedIndex(1);
                    break;
                case "Hall 02":
                    cmbHall.setSelectedIndex(2);
                    break;
                case "Hall 03":
                    cmbHall.setSelectedIndex(3);
                    break;
            }
        txtTime.setText(model.getValueAt(row, 5).toString());
        String Date = model.getValueAt(row, 6).toString();
            switch(Date){
                case "Sunday":
                    cmbDate.setSelectedIndex(1);
                    break;
                case "Monday":
                    cmbDate.setSelectedIndex(2);
                    break;
                case "Tuesday":
                    cmbDate.setSelectedIndex(3);
                    break;
                case "Wednesday":
                    cmbDate.setSelectedIndex(4);
                    break;
                case "Thursday":
                    cmbDate.setSelectedIndex(5);
                    break;
                case "Friday":
                    cmbDate.setSelectedIndex(6);
                    break;
                case "Saturday":
                    cmbDate.setSelectedIndex(7);
                    break;
            }
        txtTeacherClass.setText(model.getValueAt(row, 7).toString());
        /*String Teacher = model.getValueAt(row, 7).toString();
            switch(Teacher){
                case "Ravindu Kushan":
                    cmbTeacher.setSelectedIndex(1);
                    break;
                case "Sangeeth Navarathna":
                    cmbTeacher.setSelectedIndex(2);
                    break;
                case "Eranda Erushan":
                    cmbTeacher.setSelectedIndex(3);
                    break;
                case "Vinod Sahan":
                    cmbTeacher.setSelectedIndex(4);
                    break;
                case "Nipun Maitipe":
                    cmbTeacher.setSelectedIndex(5);
                    break;
                case "Lahiru Yapa":
                    cmbTeacher.setSelectedIndex(6);
                    break;
            }*/
        
  
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        DBConnection con = new DBConnection();
        
        
        String sql = "DELETE FROM Class WHERE ClassNo = ?";

        try {
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);

            prep.setString(1, txtClassNo.getText() );
            prep.execute();
            JOptionPane.showMessageDialog(null, "Row Delete successfully :-)");

        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(null, ex);
        }
        showTableDataClass();
        txtClassId.setText("");
        cmbGrade.setSelectedIndex(0);
        cmbSub.setSelectedIndex(0);
        cmbHall.setSelectedIndex(0);
        txtTime.setText("");
        txtTeacherClass.setText("");
        cmbDate.setSelectedIndex(0);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchClassActionPerformed
        // TODO add your handling code here:
        DBConnection con = new DBConnection();
        String by = cmbSearchByClass.getSelectedItem().toString();
        if(by=="ClassNo"){
        try
        {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassNo ='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        }
        
        }
        else if(by=="ClassId"){
        try
        {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassId='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        }
        
        }
        else if(by=="Grade")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassName='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());       
        }       
        
        }
        else if(by=="Hall")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassHall='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());       
        } 
        
        
        }
        else if(by=="Time")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassTime='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        else if(by=="Day")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassDate='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        
        else if(by=="Teacher")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassTeacher='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        else if(by=="Subject")
        {
        try    
         {
            String search = txtSearchByClass.getText();
            String sql = "select * from Class where (ClassSubject='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        
        txtSearchByClass.setText("");
        cmbSearchByClass.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_btnSearchClassActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        showTableDataClass();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTabCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabCourseMouseClicked
        int row = jTabCourse.getSelectedRow();
        TableModel model = jTabCourse.getModel();
        txtCourseNo.setText(model.getValueAt(row, 0).toString());
        txtCourseId.setText(model.getValueAt(row, 1).toString());
        String Hall = model.getValueAt(row, 4).toString();
            switch(Hall){
                case "Hall 01":
                    cmbHallCourse.setSelectedIndex(1);
                    break;
                case "Hall 02":
                    cmbHallCourse.setSelectedIndex(2);
                    break;
                case "Hall 03":
                    cmbHallCourse.setSelectedIndex(3);
                    break;
            }
        txtTimeCourse.setText(model.getValueAt(row, 2).toString());
        String Date = model.getValueAt(row, 3).toString();
            switch(Date){
                case "Sunday":
                    cmbDateCourse.setSelectedIndex(1);
                    break;
                case "Monday":
                    cmbDateCourse.setSelectedIndex(2);
                    break;
                case "Tuesday":
                    cmbDateCourse.setSelectedIndex(3);
                    break;
                case "Wednesday":
                    cmbDateCourse.setSelectedIndex(4);
                    break;
                case "Thursday":
                    cmbDateCourse.setSelectedIndex(5);
                    break;
                case "Friday":
                    cmbDateCourse.setSelectedIndex(6);
                    break;
                case "Saturday":
                    cmbDateCourse.setSelectedIndex(7);
                    break;
            }
        
        /*String Teacher = model.getValueAt(row, 2).toString();
            switch(Teacher){
                case "Ravindu Kushan":
                    cmbTeacherCourse.setSelectedIndex(1);
                    break;
                case "Sangeeth Navarathna":
                    cmbTeacherCourse.setSelectedIndex(2);
                    break;
                case "Eranda Erushan":
                    cmbTeacherCourse.setSelectedIndex(3);
                    break;
                case "Vinod Sahan":
                    cmbTeacherCourse.setSelectedIndex(4);
                    break;
                case "Nipun Maitipe":
                    cmbTeacherCourse.setSelectedIndex(5);
                    break;
                case "Lahiru Yapa":
                    cmbTeacherCourse.setSelectedIndex(6);
                    break;
            }*/
        String Course = model.getValueAt(row, 5).toString();
            switch(Course){
                case "IELTS":
                    chkIELTS.setSelected(true);
                    chkFCE.setSelected(false);
                    chkKET.setSelected(false);
                    chkPET.setSelected(false);
                    break;
                case "FCE":
                    chkIELTS.setSelected(false);
                    chkFCE.setSelected(true);
                    chkKET.setSelected(false);
                    chkPET.setSelected(false);
                    break;
                case "KET":
                    chkIELTS.setSelected(false);
                    chkFCE.setSelected(false);
                    chkKET.setSelected(true);
                    chkPET.setSelected(false);
                    break;
                case "PET":
                    chkIELTS.setSelected(false);
                    chkFCE.setSelected(false);
                    chkKET.setSelected(false);
                    chkPET.setSelected(true);
                    break;
            }      
  
    }//GEN-LAST:event_jTabCourseMouseClicked

    private void btnSearchCourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCourceActionPerformed
        // TODO add your handling code here:
        DBConnection con = new DBConnection();
        String by = cmbSearchByCourse.getSelectedItem().toString();
        if(by=="CourseNo"){
        try
        {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseNo='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        }
        
        }
        else if(by=="CourseId"){
        try
        {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseId='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        }
        
        }
        else if(by=="CourseTime")
        {
        try    
         {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseTime='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        
        
        }
        else if(by=="CourseDay")
        {
        try    
         {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseDay='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());       
        } 
        }
        else if(by=="CourseHall")
        {
        try    
         {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseHallName='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        
        else if(by=="CourseType")
        {
        try    
         {
            String search = txtSearchByCourse.getText();
            String sql = "select * from Courses where (CourseType='"+search+"')";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            ResultSet rs = prep.executeQuery();  
            jTabCourse.setModel(DbUtils.resultSetToTableModel(rs));            
            
        }catch(Exception ex)
        {
                Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null, ex.getMessage());        
        } 
        }
        
        txtSearchByClass.setText("");
        cmbSearchByClass.setSelectedIndex(0);
    }//GEN-LAST:event_btnSearchCourceActionPerformed

    private void btnUpdateCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCActionPerformed
        Course.setCourse_No(txtCourseNo.getText());
        Course.setCourse_Id(txtCourseId.getText());
        Course.setCourse_Hall(cmbHallCourse.getSelectedItem().toString());
        Course.setCourse_Time(txtTimeCourse.getText());
        Course.setCourse_Day(cmbDateCourse.getSelectedItem().toString());
        
        if(chkIELTS.isSelected())
        {
            Course.setCourse_Type(String.valueOf(chkIELTS.getText()));
        }
        if(chkFCE.isSelected())
        {
            Course.setCourse_Type(String.valueOf(chkFCE.getText()));
        }
        if(chkKET.isSelected())
        {
            Course.setCourse_Type(String.valueOf(chkKET.getText()));
        }
        if(chkPET.isSelected())
        {
            Course.setCourse_Type(String.valueOf(chkPET.getText()));
        }
        DatabaseLayer.DBUserConnection up = new DBUserConnection();
            up.UpadteCourse(Course);
        txtCourseId.setText("");
        cmbHallCourse.setSelectedIndex(0);
        
        txtTimeCourse.setText("");
        cmbDateCourse.setSelectedIndex(0);
        if(chkIELTS.isSelected())
            {
                chkIELTS.setSelected(false);
            }
            if(chkFCE.isSelected())
            {
                chkFCE.setSelected(false);
            }
            if(chkKET.isSelected())
            {
                chkKET.setSelected(false);
            }
            if(chkPET.isSelected())
            {
                chkPET.setSelected(false);
            }
                
            JOptionPane.showMessageDialog(this, "Course Updated Successfully  :-) ");
            showTableDataCourse();
            
        txtCourseId.setText("");
        txtCourseNo.setText("");
        
        cmbHallCourse.setSelectedIndex(0);
        txtTimeCourse.setText("");
        cmbDateCourse.setSelectedIndex(0);
        
       
        
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);
        chkFCE.setEnabled(true);
        chkKET.setEnabled(true);
        chkPET.setEnabled(true);
        chkIELTS.setEnabled(true);
        
    }//GEN-LAST:event_btnUpdateCActionPerformed

    private void btnDeleteCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCActionPerformed
        // TODO add your handling code here:
        DBConnection con = new DBConnection();
        
        
        String sql = "DELETE FROM Courses WHERE CourseNo = ?";

        try {
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);

            prep.setString(1, txtCourseNo.getText() );
            prep.execute();
            JOptionPane.showMessageDialog(null, "Row Delete successfully :-)");

        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(null, ex);
        }
        showTableDataCourse();
        txtCourseId.setText("");
        txtCourseId.setText("");
        
        cmbHallCourse.setSelectedIndex(0);
        txtTimeCourse.setText("");
        cmbDateCourse.setSelectedIndex(0);
        
       
        
        chkIELTS.setSelected(false);
        chkFCE.setSelected(false);
        chkKET.setSelected(false);
        chkPET.setSelected(false);
        chkFCE.setEnabled(true);
        chkKET.setEnabled(true);
        chkPET.setEnabled(true);
        chkIELTS.setEnabled(true);
    }//GEN-LAST:event_btnDeleteCActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        showTableDataCourse();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chkIELTSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIELTSActionPerformed
        // TODO add your handling code here:
        if (chkIELTS.isSelected()) {
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        } else {
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkIELTSActionPerformed

    private void chkFCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFCEActionPerformed
        // TODO add your handling code here:
        if (chkFCE.isSelected()) {
            chkIELTS.setEnabled(false);
            chkKET.setEnabled(false);
            chkPET.setEnabled(false);
        } else {
            chkIELTS.setEnabled(true);
            chkKET.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkFCEActionPerformed

    private void chkKETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkKETActionPerformed
        // TODO add your handling code here:
        if (chkKET.isSelected()) {
            chkFCE.setEnabled(false);
            chkIELTS.setEnabled(false);
            chkPET.setEnabled(false);
        } else {
            chkFCE.setEnabled(true);
            chkIELTS.setEnabled(true);
            chkPET.setEnabled(true);
        }
    }//GEN-LAST:event_chkKETActionPerformed

    private void chkPETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPETActionPerformed
        // TODO add your handling code here:
        if (chkPET.isSelected()) {
            chkFCE.setEnabled(false);
            chkKET.setEnabled(false);
            chkIELTS.setEnabled(false);
        } else {
            chkFCE.setEnabled(true);
            chkKET.setEnabled(true);
            chkIELTS.setEnabled(true);
        }
                
    }//GEN-LAST:event_chkPETActionPerformed

    private void cmbSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubActionPerformed

    private void cmbGradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGradeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGradeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Date obj = new Date();
        
        String dat = obj.toString();
        String dte[] = dat.split(" ");
        txtClassId.setText(dte[5]+"Class");
        
        int grade = cmbGrade.getSelectedIndex();
        int Sub = cmbSub.getSelectedIndex();
        int hall = cmbHall.getSelectedIndex();
        String  Time = txtTime.getText();
        String  Teacher = txtTeacherClass.getText();
        int date = cmbDate.getSelectedIndex();
        
        if ((grade == 0 )|| (Sub == 0) || (hall == 0) || (Time.isEmpty()) || (Teacher.isEmpty()) || (date == 0)){
            JOptionPane.showMessageDialog(this, "Please Select Correct Value");
        }
        else{
            String Grade = cmbGrade.getSelectedItem().toString();
            String Subject = cmbSub.getSelectedItem().toString();
            
            String txt = txtClassId.getText();
            txtClassId.setText(txt + "Grade" + Grade + Subject);
            
            Class.setClassId(txtClassId.getText());
            Class.setClassName(cmbGrade.getSelectedItem().toString());
            Class.setClassSubject(cmbSub.getSelectedItem().toString());
            Class.setClassHall(cmbHall.getSelectedItem().toString());
            Class.setClassTime(txtTime.getText());
            Class.setClassDate(cmbDate.getSelectedItem().toString());
            Class.setClassTeacher(txtTeacherClass.getText());
                    
            DatabaseLayer.DBUserConnection up = new DBUserConnection();
            up.AddClass(Class);

            JOptionPane.showMessageDialog(this, "Class Added Successfully  :-) "); 
            showTableDataClass();
            
        }
        txtClassId.setText("");
        cmbGrade.setSelectedIndex(0);
        cmbSub.setSelectedIndex(0);
        cmbHall.setSelectedIndex(0);
        txtTime.setText("");
        txtTeacherClass.setText("");
        cmbDate.setSelectedIndex(0);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtClassNo.setText("");
        txtClassId.setText("");
        cmbGrade.setSelectedIndex(0);
        cmbSub.setSelectedIndex(0);
        cmbHall.setSelectedIndex(0);
        txtTime.setText("");
        txtTeacherClass.setText("");
        cmbDate.setSelectedIndex(0);
        lblDis.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void jTabAcadmicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabAcadmicMouseClicked
        int row = jTabAcadmic.getSelectedRow();
        TableModel model = jTabAcadmic.getModel();
        txtTeacherClass.setText(model.getValueAt(row, 0).toString());
        
    }//GEN-LAST:event_jTabAcadmicMouseClicked

    private void txtTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimeMouseClicked
     
        lblDis.setVisible(true);
        lblDis.setText("  HH.MM am - HH.MM pm (24 hour type)");
    }//GEN-LAST:event_txtTimeMouseClicked

    private void txtTimeCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTimeCourseMouseClicked
        lblDisCouse.setVisible(true);
        lblDisCouse.setText("HH.MM am - HH.MM pm (24 hour type)");
    }//GEN-LAST:event_txtTimeCourseMouseClicked

    private void chkIELTSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkIELTSMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chkIELTSMouseClicked
  /*public void Enable(){
        jRadioButton2.setEnabled(true);
        jRadioButton1.setEnabled(false);
        cmbGrade.setVisible(true);
        cmbSub.setVisible(true);
        cmbHallCourse.setVisible(true);
        txtTimeCourse.setVisible(true);
        cmbDateCourse.setVisible(true);
        cmbTeacherCourse.setVisible(true);
        chkFCE.setVisible(false);
        chkIELTS.setVisible(false);
        chkKET.setVisible(false);
        chkPET.setVisible(false);
        lblCource.setVisible(false);
        lblClsN.setVisible(true);
        txtClassId.setText("");
        int year = Calendar.getInstance().get(Calendar.YEAR);
        txtClassId.setText(year+"Cls");
 
  
    }
    public void Disable(){
        jRadioButton1.setEnabled(true);
        jRadioButton2.setEnabled(false);
        lblClsN.setVisible(false);
        cmbGrade.setVisible(false);
        cmbSub.setVisible(false);
        cmbHallCourse.setVisible(true);
        txtTimeCourse.setVisible(true);
        cmbDateCourse.setVisible(true);
        cmbTeacherCourse.setVisible(true);
        chkFCE.setVisible(true);
        chkIELTS.setVisible(true);
        chkKET.setVisible(true);
        chkPET.setVisible(true);
        lblCource.setVisible(true);
        txtClassId.setText("");
        int year = Calendar.getInstance().get(Calendar.YEAR);
        txtClassId.setText(year+"Cous"); */
public void showTableDataTeachers() {

      try {
            DBConnection con = new DBConnection();
            String sql = "select Name,Subject from Staff WHERE Type='Academic'";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.executeQuery();

            jTabAcadmic.setModel(DbUtils.resultSetToTableModel(prep.executeQuery()));

        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    
    public void showTableDataClass() {

        try {
            DBConnection con = new DBConnection();
            String sql = "select * from Class";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.executeQuery();

            jTable1.setModel(DbUtils.resultSetToTableModel(prep.executeQuery()));

        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    public void showTableDataCourse() {

        try {
            DBConnection con = new DBConnection();
            String sql = "Select * FROM Courses";
            PreparedStatement prep = con.getDBConnection().prepareStatement(sql);
            prep.executeQuery();

            jTabCourse.setModel(DbUtils.resultSetToTableModel(prep.executeQuery()));

        } catch (Exception ex) {
            Logger.getLogger(DBConnection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearCourse;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteC;
    private javax.swing.JButton btnSearchClass;
    private javax.swing.JButton btnSearchCource;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateC;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox chkFCE;
    private javax.swing.JCheckBox chkIELTS;
    private javax.swing.JCheckBox chkKET;
    private javax.swing.JCheckBox chkPET;
    private javax.swing.JComboBox<String> cmbDate;
    private javax.swing.JComboBox<String> cmbDateCourse;
    private javax.swing.JComboBox<String> cmbGrade;
    private javax.swing.JComboBox<String> cmbHall;
    private javax.swing.JComboBox<String> cmbHallCourse;
    private javax.swing.JComboBox<String> cmbSearchByClass;
    private javax.swing.JComboBox<String> cmbSearchByCourse;
    private javax.swing.JComboBox<String> cmbSub;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTabAcadmic;
    private javax.swing.JTable jTabCourse;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblClsN1;
    private javax.swing.JLabel lblCource;
    private javax.swing.JLabel lblDis;
    private javax.swing.JLabel lblDisCouse;
    private javax.swing.JTextField txtClassId;
    private javax.swing.JTextField txtClassNo;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtCourseNo;
    private javax.swing.JTextField txtSearchByClass;
    private javax.swing.JTextField txtSearchByCourse;
    private javax.swing.JTextField txtTeacherClass;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTimeCourse;
    // End of variables declaration//GEN-END:variables
}
